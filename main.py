import telebot
from dotenv import load_dotenv, find_dotenv
import os
from g4f.client import Client
from telebot.types import ReplyKeyboardMarkup, KeyboardButton
from telebot.types import InlineKeyboardButton, InlineKeyboardMarkup


load_dotenv(find_dotenv())
API_TOKEN = os.getenv("TOKEN")
bot = telebot.TeleBot(API_TOKEN)

user_ask = " –Ω–∞ –∫–∞–∫–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ —è –ø–æ—Ö–æ–∂? –Ω–∞–ø–∏—à–∏ —Ç–µ–∫—Å—Ç–æ–º –Ω–∞ —Ä—É—Å—Å–∫–æ–º"

@bot.message_handler(commands=["start"])
def send_welcome(message):
    chatID = message.chat.id
    markup = InlineKeyboardMarkup()
    button1 = InlineKeyboardButton("–õ—é–±–æ–π –ü–µ—Ä—Å–æ–Ω–∞–∂ü§î", callback_data="character")
    button2 = InlineKeyboardButton("–ü–µ—Ä—Å–æ–Ω–∞–∂ –ú—É–ª—å—Ç—Ñ–∏–ª—å–º–∞üå†üéÜ", callback_data="disney")
    button3 = InlineKeyboardButton("–ü–µ—Ä—Å–æ–Ω–∞–∂ –ò–≥—Ä—ãüëæüéÆ", callback_data="game")
    button4 = InlineKeyboardButton("–ü–µ—Ä—Å–æ–Ω–∞–∂ –§–∏–ª—å–º–∞üåáüé•", callback_data="film")
    button5 = InlineKeyboardButton("–ü–µ—Ä—Å–æ–Ω–∞–∂ –∏–∑ –°–µ—Ä–∏–∞–ª–∞üåÉüé¨", callback_data="serial")
    markup.add(button1)
    markup.add(button2)
    markup.add(button3)
    markup.add(button4)
    markup.add(button5)
    bot.send_message(chatID, "–ü—Ä–∏–≤–µ—Ç, —ç—Ç–æ—Ç –±–æ—Ç –º–æ–∂–µ—Ç –ø–æ–º–æ—á—å —Ç–µ–±–µ –Ω–∞–π—Ç–∏ –ø–æ—Ö–æ–∂–µ–≥–æ –Ω–∞ —Å–µ–±—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞\n"
                             "–ú–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –∫–∞–∫–æ–≥–æ –∏–º–µ–Ω–Ω–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ü•≥üëá", reply_markup=markup)


@bot.callback_query_handler(func=lambda callback:True)
def handle_callback1(callback):
    global user_ask
    chatID = callback.from_user.id
    button_call = callback.data
    if button_call == "character":
        user_ask = " –Ω–∞ –∫–∞–∫–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ —è –ø–æ—Ö–æ–∂? –Ω–∞–ø–∏—à–∏ —Ç–µ–∫—Å—Ç–æ–º –Ω–∞ —Ä—É—Å—Å–∫–æ–º"
        bot.send_message(chatID, "ü§©–î–ª—è –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è –ª—é–±–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É "
                                 "/find_character\n‚Ü©–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é, —Å–Ω–æ–≤–∞ –≤–≤–µ–¥–∏—Ç–µ /start")

    elif button_call == "disney":
        user_ask = " –Ω–∞ –∫–∞–∫–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –∏–∑ –º—É–ª—å—Ç—Ñ–∏–ª—å–º–∞ —è –ø–æ—Ö–æ–∂? –Ω–∞–ø–∏—à–∏ —Ç–µ–∫—Å—Ç–æ–º –Ω–∞ —Ä—É—Å—Å–∫–æ–º"
        bot.send_message(chatID, "ü§©–î–ª—è –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è –Ω–∞–π—Ç–∏ –ª—é–±–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –º—É–ª—å—Ç—Ñ–∏–ª—å–º–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É "
                                 "/find_character\n‚Ü©–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é, —Å–Ω–æ–≤–∞ –≤–≤–µ–¥–∏—Ç–µ /start"
                                 "\n\n–•–æ—Ç–∏—Ç–µ —É—Ç–æ—á–Ω–∏—Ç—å –º—É–ª—å—Ç—Ñ–∏–ª—å–º?ü§î –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /definite")

    elif button_call == "game":
        user_ask = " –Ω–∞ –∫–∞–∫–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –∏–∑ –∏–≥—Ä—ã —è –ø–æ—Ö–æ–∂? –Ω–∞–ø–∏—à–∏ —Ç–µ–∫—Å—Ç–æ–º –Ω–∞ —Ä—É—Å—Å–∫–æ–º"
        bot.send_message(chatID, "ü§©–î–ª—è –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è –ª—é–±–æ–≥–æ –∏–≥—Ä–æ–≤–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É "
                                 "/find_character\n‚Ü©–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏—é, —Å–Ω–æ–≤–∞ –≤–≤–µ–¥–∏—Ç–µ /start"
                                 "\n\n–•–æ—Ç–∏—Ç–µ —É—Ç–æ—á–Ω–∏—Ç—å –∏–≥—Ä—É?ü§î –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /definite")
    elif button_call == "film":
        user_ask = " –Ω–∞ –∫–∞–∫–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –∏–∑ —Ñ–∏–ª—å–º–∞ —è –ø–æ—Ö–æ–∂? –Ω–∞–ø–∏—à–∏ —Ç–µ–∫—Å—Ç–æ–º –Ω–∞ —Ä—É—Å—Å–∫–æ–º"
        bot.send_message(chatID, "ü§©–î–ª—è –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è –ª—é–±–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –∏–∑ —Ñ–∏–ª—å–º–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É "
                                 "/find_character\n‚Ü©–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏—é, —Å–Ω–æ–≤–∞ –≤–≤–µ–¥–∏—Ç–µ /start"
                                 "\n\n–•–æ—Ç–∏—Ç–µ —É—Ç–æ—á–Ω–∏—Ç—å —Ñ–∏–ª—å–º?ü§î –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /definite")
    elif button_call == "serial":
        user_ask = " –Ω–∞ –∫–∞–∫–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –∏–∑ —Ñ–∏–ª—å–º–∞ —è –ø–æ—Ö–æ–∂? –Ω–∞–ø–∏—à–∏ —Ç–µ–∫—Å—Ç–æ–º –Ω–∞ —Ä—É—Å—Å–∫–æ–º"
        bot.send_message(chatID, "ü§©–î–ª—è –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è –Ω–∞–π—Ç–∏ –ª—é–±–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –∏–∑ —Å–µ—Ä–∏–∞–ª–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É "
                                 "/find_character\n‚Ü©–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏—é, —Å–Ω–æ–≤–∞ –≤–≤–µ–¥–∏—Ç–µ /start"
                                 "\n\n–•–æ—Ç–∏—Ç–µ —É—Ç–æ—á–Ω–∏—Ç—å —Å–µ—Ä–∏–∞–ª?ü§î –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /definite")


@bot.message_handler(commands=["definite"])
def definite(message):
    chatID = message.chat.id
    bot.send_message(chatID, "–ò–∑ –∫–∞–∫–æ–≥–æ —Ñ–∞–Ω–¥–æ–º–∞ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞?ü§î –ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞")
    bot.register_next_step_handler(message, definite_ask)


def definite_ask(message):
    global user_ask
    chatID = message.chat.id
    user_ask = f" –Ω–∞ –∫–∞–∫–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –∏–∑ {message.text} —è –ø–æ—Ö–æ–∂? –Ω–∞–ø–∏—à–∏ —Ç–µ–∫—Å—Ç–æ–º –Ω–∞ —Ä—É—Å—Å–∫–æ–º"
    bot.send_message(chatID, "–û–ø–∏—à–∏—Ç–µ —Å–µ–±—èüòã")
    bot.register_next_step_handler(message, generate_character)



@bot.message_handler(commands=["find_character"])
def ask(message):
    chatID = message.chat.id
    bot.send_message(chatID, "–û–ø–∏—à–∏—Ç–µ —Å–µ–±—èüòã")
    bot.register_next_step_handler(message, generate_character)


def generate_character(message):
    chatID = message.chat.id
    message_text = message.text + user_ask
    bot.send_message(chatID, "–ë–æ—Ç –∏—â–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ üîÜ")
    bot.send_message(chatID, info_wolfram(message_text))
    markup = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add("–û—á–µ–Ω—å –Ω–∞ –º–µ–Ω—è –ø–æ—Ö–æ–∂–µ!!üòØü§©", "–ù–µ –æ—á–µ–Ω—å –ø–æ—Ö–æ–∂–µüòï", row_width=2)
    bot.send_message(chatID, "–ü–æ—Ö–æ–∂ –ª–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂ –Ω–∞ –≤–∞—Å?üòâ "
                             "ü§ó–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞–π—Ç–∏ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –Ω–∞–π—Ç–∏ –¥—Ä—É–≥–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ —Å–Ω–æ–≤–∞ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start",
                     reply_markup=markup)

def info_wolfram(query):
    client = Client()
    response = client.chat.completions.create(
        model="gpt-3.5-turbo",
        messages=[{"role": "user", "content": query}]
    )
    return response.choices[0].message.content


@bot.message_handler(func=lambda massage:True)
def echo_massage(massage):
    text_massage = massage.text
    text_massage = text_massage.lower()
    if "–æ—á–µ–Ω—å –Ω–∞ –º–µ–Ω—è –ø–æ—Ö–æ–∂–µ" in text_massage:
        bot.reply_to(massage, "–Ø –æ—á–µ–Ω—å —ç—Ç–æ–º—É —Ä–∞–¥üòäü•≥")
    elif "–Ω–µ –æ—á–µ–Ω—å –ø–æ—Ö–æ–∂–µ" in text_massage:
        bot.reply_to(massage, "–û—á–µ–Ω—å –∂–∞–ª—å üò¢, –±–æ—Ç –µ—â–µ –æ–±—É—á–∞–µ—Ç—Å—è"
                              "\nü§ó–í—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –Ω–∞–π—Ç–∏ –¥—Ä—É–≥–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ —Å–ø–æ–º–æ—â—å—é –∫–æ–º–º–∞–Ω–¥—ã /start")
    else:
        bot.reply_to(massage, "–ò–∑–≤–∏–Ω–∏—Ç–µ –±–æ—Ç –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ªüôÉ")

bot.infinity_polling()